using System;
using System.ComponentModel;
using System.Diagnostics;
using System.IO;
using System.Windows.Input;
using Avalonia.Controls;
using ReactiveUI;

namespace Root_Way.ViewModels;

public class ExploitationWindowViewModel : ViewModelBase, IReactiveObject
{
    private string _target;
    private string? _port;
    private ComboBoxItem _listenerType;
    private string _contentListenerType;

    public ICommand ScanCommand1 { get; }
    public ICommand ComboBoxCommand { get; }

    public ExploitationWindowViewModel()
    {
        ScanCommand1 = new ViewModelCommand(ExecuteScanCommand);
        ComboBoxCommand = new ViewModelCommand(ExecuteComboBoxCommand);
    }
    
    public string Target
    {
        get => _target;
        set
        {
            _target = value;
            OnPropertyChanged(nameof(Target));
        }
    }

    public string Port
    {
        get => _port;
        set
        {
            _port = value;
            OnPropertyChanged(nameof(Port));
        }
    }
    
    public ComboBoxItem ListenerType
    {
        get => _listenerType;
        set
        {
            _listenerType = value;
            OnPropertyChanged(nameof(ListenerType));
        }
    }
    
    public string ContentListenerType
    {
        get => _contentListenerType;
        set
        {
            _contentListenerType = value;
            OnPropertyChanged(nameof(ContentListenerType));
        }
    }

    private void ExecuteScanCommand(object obj)
    {
        string target = Target;
        string? port = Port;
        string nmapArguments = "";

        //PORTS
        if (!string.IsNullOrEmpty(Port))
        {
            nmapArguments += " -p " + Port + " " + target;
        }
        else
        {
            nmapArguments += " " + target;
        }
    }
    
    private void ExecuteComboBoxCommand(object obj)
    {

        switch (ListenerType.Content)
        {
            case "nc":
                ContentListenerType = "nc -lvnp 9002";
                break;

            case "nc freebsd":
                ContentListenerType = "nc -lvn 9002";
                    
                break;
                
            case "busybox nc":
                ContentListenerType = "busybox nc -lp 9002";
                    
                break;

            case "ncat":
                ContentListenerType = "ncat.exe -lvnp 9002";
                    
                break;

            default:
                ContentListenerType = "nc -lvnp 9002";
                break;
        }
    }


    public event PropertyChangingEventHandler? PropertyChanging;
    public void RaisePropertyChanging(PropertyChangingEventArgs args)
    {
        throw new System.NotImplementedException();
    }

    public void RaisePropertyChanged(PropertyChangedEventArgs args)
    {
        throw new System.NotImplementedException();
    }
}